# Tiny Tapeout project information
project:
  title:        "NeuroCAM - AI Pattern Matching Engine"      # Project title
  author:       "Pathan Rehman Ahmed Khan"      # Your name
  discord:      ""      # Your discord username, for communication and automatically assigning you a Tapeout role (optional)
  description:  "Content-Addressable Memory with Hamming distance calculation for AI pattern recognition and template matching applications"      # One line description of what your project does
  language:     "Verilog" # other examples include SystemVerilog, Amaranth, VHDL, etc
  clock_hz:     10000000       # Clock frequency in Hz (10MHz for reliable operation)
  # How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"          # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2, 6x2 or 8x2
  # Your top module name must start with "tt_um_". Make it unique by including your github username:
  top_module:  "tt_um_neurocam"
  # List your project's source files here.
  # Source files must be in ./src and you must list each source file separately, one per line.
  # Don't forget to also update `PROJECT_SOURCES` in test/Makefile.
  source_files:
    - "neurocam.v"

# The pinout of your project. Leave unused pins blank. DO NOT delete or add any pins.
# This section is for the datasheet/website. Use descriptive names (e.g., RX, TX, MOSI, SCL, SEG_A, etc.).
pinout:
  # Inputs
  ui[0]: "INPUT_CYCLE[0] - Input data cycle selector bit 0"
  ui[1]: "INPUT_CYCLE[1] - Input data cycle selector bit 1"
  ui[2]: "WRITE_ADDR[0] - Write address bit 0"
  ui[3]: "WRITE_ADDR[1] - Write address bit 1"
  ui[4]: "WRITE_ADDR[2] - Write address bit 2"
  ui[5]: "WRITE_ADDR[3] - Write address bit 3"
  ui[6]: "WRITE_EN - Write enable signal"
  ui[7]: "SEARCH_EN - Search enable signal"
  # Outputs
  uo[0]: "MATCH_ADDR[0] - Best match address bit 0"
  uo[1]: "MATCH_ADDR[1] - Best match address bit 1"
  uo[2]: "MATCH_ADDR[2] - Best match address bit 2"
  uo[3]: "MATCH_ADDR[3] - Best match address bit 3"
  uo[4]: "HAMMING_DIST[0] - Hamming distance bit 0"
  uo[5]: "HAMMING_DIST[1] - Hamming distance bit 1"
  uo[6]: "HAMMING_DIST[2] - Hamming distance bit 2"
  uo[7]: "MATCH_VALID - Match result valid flag"
  # Bidirectional pins
  uio[0]: "DATA_IN[0] - Input data bit 0 (search pattern/write data)"
  uio[1]: "DATA_IN[1] - Input data bit 1 (search pattern/write data)"
  uio[2]: "DATA_IN[2] - Input data bit 2 (search pattern/write data)"
  uio[3]: "DATA_IN[3] - Input data bit 3 (search pattern/write data)"
  uio[4]: "HAMMING_OUT[0] - Full Hamming distance output bit 0"
  uio[5]: "HAMMING_OUT[1] - Full Hamming distance output bit 1"
  uio[6]: "HAMMING_OUT[2] - Full Hamming distance output bit 2"
  uio[7]: "HAMMING_OUT[3] - Full Hamming distance output bit 3"

# Do not change!
yaml_version: 6
